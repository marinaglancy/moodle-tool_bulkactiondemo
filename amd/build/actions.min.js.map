{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Perform bulk user action in AJAX request\n *\n * @module     tool_bulkactiondemo/actions\n * @copyright  2024 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport {getStrings} from 'core/str';\nimport Ajax from 'core/ajax';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {add as addToast} from 'core/toast';\nimport * as FormChangeChecker from 'core_form/changechecker';\n\nconst SELECTORS = {\n    bulkActionForm: 'body#page-admin-user form#user-bulk-action-form',\n};\n\n/**\n * Initialise module\n */\nexport const init = () => {\n    const form = document.querySelector(SELECTORS.bulkActionForm);\n\n    if (!form) {\n        return;\n    }\n\n    form.addEventListener('submit', (e) => {\n        let action = form.querySelector('select[name=\"action\"]')?.value;\n        if (!action.startsWith('tool_bulkactiondemo_')) {\n            return;\n        }\n\n        e.preventDefault();\n        FormChangeChecker.markFormSubmitted(e.target);\n\n        action = action.replace('tool_bulkactiondemo_', '');\n        const userlist = e.target.data.usernames.join(', ');\n        const userids = e.target.data.userids;\n\n        let key;\n        if (action === 'suspend') {\n            key = 'confirmsuspend';\n        } else if (action === 'unsuspend') {\n            key = 'confirmunsuspend';\n        } else {\n            return;\n        }\n\n        getStrings([\n            {'key': 'confirm'},\n            {'key': key, component: 'tool_bulkactiondemo', param: userlist},\n            {'key': 'yes'},\n            {'key': 'no'},\n            {'key': 'changessaved', component: 'moodle'}\n        ])\n        .then(strings => {\n            form.querySelector('select[name=\"action\"]').value = '0';\n            return Notification.confirm(strings[0], strings[1], strings[2], strings[3],\n                () => performAction(action, userids, strings[4]));\n        })\n        .catch(Notification.exception);\n    });\n};\n\n/**\n * Perform action\n *\n * @param {String} action\n * @param {Array} userids\n * @param {String} successMessage\n */\nfunction performAction(action, userids, successMessage) {\n    const reportElement = document.querySelector('[data-region=\"report-user-list-wrapper\"] ' + reportSelectors.regions.report);\n\n    Ajax.call([{\n        methodname: 'tool_bulkactiondemo_action',\n        args: {\n            action: action,\n            userids: userids,\n        },\n        done: () => {\n            addToast(successMessage, {});\n            if (reportElement) {\n                dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n            }\n        },\n        fail: (error) => Notification.exception(error),\n    }]);\n}"],"names":["SELECTORS","form","document","querySelector","addEventListener","e","action","_form$querySelector","value","startsWith","preventDefault","FormChangeChecker","markFormSubmitted","target","replace","userlist","data","usernames","join","userids","key","component","param","then","strings","Notification","confirm","successMessage","reportElement","reportSelectors","regions","report","call","methodname","args","done","reportEvents","tableReload","preservePagination","fail","error","exception","performAction","catch"],"mappings":";;;;;;;yVAgCMA,yBACc,gEAMA,WACVC,KAAOC,SAASC,cAAcH,0BAE/BC,MAILA,KAAKG,iBAAiB,UAAWC,gCACzBC,mCAASL,KAAKE,cAAc,+DAAnBI,oBAA6CC,UACrDF,OAAOG,WAAW,+BAIvBJ,EAAEK,iBACFC,kBAAkBC,kBAAkBP,EAAEQ,QAEtCP,OAASA,OAAOQ,QAAQ,uBAAwB,UAC1CC,SAAWV,EAAEQ,OAAOG,KAAKC,UAAUC,KAAK,MACxCC,QAAUd,EAAEQ,OAAOG,KAAKG,YAE1BC,OACW,YAAXd,OACAc,IAAM,qBACH,CAAA,GAAe,cAAXd,cACPc,IAAM,uCAKC,CACP,KAAQ,WACR,KAAQA,IAAKC,UAAW,sBAAuBC,MAAOP,UACtD,KAAQ,OACR,KAAQ,MACR,KAAQ,eAAgBM,UAAW,YAEtCE,MAAKC,UACFvB,KAAKE,cAAc,yBAAyBK,MAAQ,IAC7CiB,sBAAaC,QAAQF,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,IACpE,aAaOlB,OAAQa,QAASQ,sBAC9BC,cAAgB1B,SAASC,cAAc,4CAA8C0B,gBAAgBC,QAAQC,sBAE9GC,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CACF5B,OAAQA,OACRa,QAASA,SAEbgB,KAAM,oBACOR,eAAgB,IACrBC,mDACcQ,aAAaC,YAAa,CAACC,oBAAoB,GAAOV,gBAG5EW,KAAOC,OAAUf,sBAAagB,UAAUD,UA5B1BE,CAAcpC,OAAQa,QAASK,QAAQ,SAEpDmB,MAAMlB,sBAAagB"}